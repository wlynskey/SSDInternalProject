@model SSDInternalProject.ViewModels.TicketVM
@using SSDInternalProject.ViewModels
@using SSDInternalProject.Repositories

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_LayoutPage1.cshtml";
}

<h2>Edit</h2>

@using (Html.BeginForm("Edit", "Ticket", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>TicketVM</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.TicketVMId)

        <div class="form-group">
            @Html.LabelFor(model => model.CreationDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">                
                @Html.EditorFor(model => model.CreationDate, new { htmlAttributes = new { @class = "form-control"} })
                @Html.ValidationMessageFor(model => model.CreationDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RepairStartDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RepairStartDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RepairStartDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RepairFinishDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RepairFinishDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RepairFinishDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FinishDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FinishDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FinishDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Notes, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextArea("Notes", new { rows = 5, cols = 100 })
                @Html.ValidationMessageFor(model => model.Notes, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.imagePath1, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.imagePath1, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.imagePath1, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.imagePath2, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.imagePath2, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.imagePath2, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.imagePath3, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.imagePath3, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.imagePath3, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.imagePath4, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.imagePath4, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.imagePath4, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.imagePath5, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.imagePath5, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.imagePath5, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Hours, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Hours, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Hours, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.QuotedCost, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.QuotedCost, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.QuotedCost, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FinalCost, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FinalCost, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FinalCost, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StatusVMId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                <select class="form-control">
                    <option name="StatusVMId" value="null"></option>
                    @{
                        foreach (StatusVM item in ViewBag.Statuses)
                        {
                            if (Model.StatusVMId == item.StatusVMId)
                            {
                                <option selected="selected" name="StatusVMId" value="@item.StatusVMId">@item.Status</option>
                            }
                            else
                            {
                                <option name="StatusVMId" value="@item.StatusVMId">@item.Status</option>
                            }
                        }
                    }
                </select>
                @Html.ValidationMessageFor(model => model.StatusVMId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RepairVMId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                <select class="form-control">
                    <option name="RepairVMId" value="null"></option>
                    @{
                        foreach (RepairVM item in ViewBag.Repairs)
                        {
                            if (Model.RepairVMId == item.RepairVMId)
                            {
                                <option selected="selected" name="RepairVMId" value="@item.RepairVMId">@item.Name</option>
                            }
                            else
                            {
                                <option name="RepairVMId" value="@item.RepairVMId">@item.Name</option>
                            }
                        }
                    }
                </select>
                @Html.ValidationMessageFor(model => model.RepairVMId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => new BrandRepo().GetBrand(new DeviceRepo().GetDevice(model.DeviceVMId).BrandVMId).Brand, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">                
                <select id="BrandSelect" class="form-control">
                    <option name="BrandVMId" value="null"></option>
                    @{
                        foreach (BrandVM item in ViewBag.Brands)
                        {
                            if (new DeviceRepo().GetDevice(Model.DeviceVMId).BrandVMId == item.BrandVMId)
                            {
                                <option selected="selected" value="@item.BrandVMId">@item.Brand</option>
                            }
                            else
                            {
                                <option value="@item.BrandVMId">@item.Brand</option>
                            }
                        }
                    }
                </select>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => new DeviceRepo().GetDevice(model.DeviceVMId).Model, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                <select id="ModelSelect" class="form-control">
                    <option class="BlankSelect" name="DeviceVMId" value="null"></option>
                    @{
                        foreach (DeviceVM item in ViewBag.Devices)
                        {
                            if (Model.DeviceVMId == item.DeviceVMId)
                            {
                                <option selected="selected" name="DeviceVMId" class="@item.BrandVMId" value="@item.DeviceVMId">@item.Model</option>
                            }
                            else
                            {
                                <option name="DeviceVMId" class="@item.BrandVMId" value="@item.DeviceVMId">@item.Model</option>
                            }
                        }
                    }
                </select>
                @Html.ValidationMessageFor(model => model.DeviceVMId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
                        }

<div>
    @Html.ActionLink("Back to List", "TicketList", "Ticket")
</div>
