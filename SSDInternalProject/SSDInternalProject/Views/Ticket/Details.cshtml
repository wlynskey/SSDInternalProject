@model SSDInternalProject.ViewModels.TicketVM
@using SSDInternalProject.Repositories
@using SSDInternalProject.ViewModels

@{
    ViewBag.Title = "Detail";
    Layout = "~/Views/Shared/_LayoutPage1.cshtml";
}

<h2>Detail</h2>

<div>
    <h4>TicketVM</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.CreationDate)
        </dt>

        <dd>
            @{
                string creationDate = Model.CreationDate.ToString("dd/MM/yy");
            }
            @Html.Raw(@creationDate)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.RepairStartDate)
        </dt>

        <dd>
            @{
                string repairStartDate = "";
                if (Model.RepairStartDate != new DateTime())
                {
                    repairStartDate = Model.RepairStartDate.ToString("dd/MM/yy");
                }
            }
            @Html.Raw(@repairStartDate)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.RepairFinishDate)
        </dt>

        <dd>
            @{
                string repairFinishtDate = "";
                if (Model.RepairFinishDate != new DateTime())
                {
                    repairFinishtDate = Model.RepairFinishDate.ToString("dd/MM/yy");
                }
            }
            @Html.Raw(@repairFinishtDate)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.FinishDate)
        </dt>

        <dd>
            @{
                string finishtDate = "";
                if (Model.FinishDate != new DateTime())
                {
                    finishtDate = Model.FinishDate.ToString("dd/MM/yy");
                }
            }
            @Html.Raw(@finishtDate)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Notes)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Notes)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Hours)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Hours)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.QuotedCost)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.QuotedCost)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.FinalCost)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.FinalCost)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.StatusVMId)
        </dt>

        <dd>
            @{
                StatusRepo sRepo = new StatusRepo();
                string status = sRepo.GetStatus(Model.StatusVMId).Status;
            }
            @Html.Raw(@status)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.RepairVMId)
        </dt>

        <dd>
            @{
                string repair;
                if (Model.RepairVMId != 0)
                {
                    RepairRepo rRepo = new RepairRepo();
                    repair = rRepo.GetRepair(Model.RepairVMId).Name;
                }
                else { repair = "unspecified"; }
            }
            @Html.Raw(@repair)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.DeviceVMId)
        </dt>

        <dd>
            @{
                DeviceRepo dRepo = new DeviceRepo();
                BrandRepo bRepo = new BrandRepo();
                DeviceVM device = dRepo.GetDevice(Model.DeviceVMId);
                string deviceName = bRepo.GetBrand(device.BrandVMId).Brand + " " + device.Model;
            }
            @Html.Raw(@deviceName)
        </dd>

    </dl>
    @{
        string[] images = { Model.imagePath1, Model.imagePath2, Model.imagePath3, Model.imagePath4, Model.imagePath5 };
        foreach (string image in images)
        {
            if (image != null)
            {
                <img src="@image" width="150" alt="ticket-image" />
            }
        }
    }
</div>
<p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.TicketVMId }) |
    @Html.ActionLink("Back to List", "TicketList", "Ticket")
</p>
